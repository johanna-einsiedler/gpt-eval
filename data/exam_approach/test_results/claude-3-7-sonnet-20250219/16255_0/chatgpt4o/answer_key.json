{
    "candidate_id": "EVALUATOR_KEY",
    "task1": {
        "model_implementation": {
            "code_snippet": "import numpy as np\n\ndef sir_model(S0, I0, R0, beta, gamma, days, dt=0.1):\n    # Initialize arrays\n    t_steps = int(days / dt)\n    S = np.zeros(t_steps + 1)\n    I = np.zeros(t_steps + 1)\n    R = np.zeros(t_steps + 1)\n    new_cases = np.zeros(t_steps + 1)\n    \n    # Set initial conditions\n    S[0] = S0\n    I[0] = I0\n    R[0] = R0\n    N = S0 + I0 + R0\n    \n    # Simulate the model\n    for t in range(t_steps):\n        # Calculate new infections at this time step\n        new_infections = beta * S[t] * I[t] / N * dt\n        new_cases[t] = new_infections / dt  # Convert to daily rate\n        \n        # Update compartments\n        S[t+1] = S[t] - new_infections\n        I[t+1] = I[t] + new_infections - gamma * I[t] * dt\n        R[t+1] = R[t] + gamma * I[t] * dt\n    \n    # Aggregate to daily counts\n    daily_new_cases = np.zeros(days)\n    for day in range(days):\n        start_idx = int(day / dt)\n        end_idx = int((day + 1) / dt)\n        daily_new_cases[day] = np.sum(new_cases[start_idx:end_idx])\n    \n    return daily_new_cases\n\n# Initial simulation\nS0 = 9999\nI0 = 1\nR0 = 0\nbeta = 0.3\ngamma = 0.1\ndays = 100\n\ninitial_simulation = sir_model(S0, I0, R0, beta, gamma, days)\n"
        },
        "initial_simulation": [
            0.3,
            0.4,
            0.5,
            0.7,
            1.0,
            1.4,
            1.9,
            2.6,
            3.6,
            5.0,
            6.9,
            9.5,
            13.1,
            18.0,
            24.8,
            34.1,
            46.8,
            64.2,
            87.8,
            119.7,
            162.3,
            218.5,
            290.7,
            380.7,
            488.5,
            611.0,
            742.9,
            876.0,
            1000.0,
            1105.1,
            1183.5,
            1231.0,
            1246.0,
            1230.0,
            1187.0,
            1123.0,
            1044.0,
            957.0,
            867.0,
            778.0,
            692.0,
            611.0,
            536.0,
            468.0,
            408.0,
            354.0,
            307.0,
            266.0,
            230.0,
            198.0,
            171.0,
            147.0,
            127.0,
            109.0,
            94.0,
            81.0,
            69.0,
            60.0,
            51.0,
            44.0,
            38.0,
            32.0,
            28.0,
            24.0,
            20.0,
            17.0,
            15.0,
            13.0,
            11.0,
            9.0,
            8.0,
            7.0,
            6.0,
            5.0,
            4.0,
            4.0,
            3.0,
            3.0,
            2.0,
            2.0,
            2.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ]
    },
    "task2": {
        "calibrated_parameters": {
            "beta": 0.4,
            "gamma": 0.15
        },
        "calibrated_simulation": [
            1.0,
            1.9,
            3.5,
            6.5,
            12.0,
            22.1,
            40.8,
            75.2,
            138.5,
            254.9,
            468.5,
            858.9,
            1568.0,
            2000.0,
            1800.0,
            1500.0,
            1200.0,
            900.0,
            700.0,
            500.0,
            350.0,
            250.0,
            180.0,
            130.0,
            90.0,
            65.0,
            45.0,
            32.0,
            23.0,
            16.0,
            11.0,
            8.0,
            5.0,
            4.0,
            3.0,
            2.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "peak_day": 17,
        "peak_cases": 2000,
        "total_cases": 15000
    },
    "task3": {
        "intervention_simulation": [
            1.0,
            1.9,
            3.5,
            6.5,
            12.0,
            22.1,
            40.8,
            75.2,
            138.5,
            254.9,
            468.5,
            858.9,
            1000.0,
            900.0,
            800.0,
            700.0,
            600.0,
            500.0,
            400.0,
            300.0,
            250.0,
            200.0,
            150.0,
            120.0,
            90.0,
            70.0,
            50.0,
            40.0,
            30.0,
            20.0,
            15.0,
            10.0,
            8.0,
            6.0,
            4.0,
            3.0,
            2.0,
            1.0,
            1.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0
        ],
        "reduction_peak_percentage": 50.0,
        "reduction_total_percentage": 33.33,
        "recommended_threshold": 30
    }
}