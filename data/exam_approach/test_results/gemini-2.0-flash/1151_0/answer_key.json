{
    "answer_key": {
        "Total Cost PO-2023-103": "500.00",
        "Overdue Delivery POs": [
            "PO-2023-103",
            "PO-2023-108",
            "PO-2023-110"
        ],
        "Global Components Inc. Order Count": "3"
    },
    "answer_explanation": {
        "Total Cost PO-2023-103": "To calculate the Total Cost for Purchase Order PO-2023-103, multiply the 'Quantity Ordered' (20) by the 'Unit Price' (25.00).  20 * 25.00 = 500.00. The answer should be formatted to two decimal places as '500.00'.",
        "Overdue Delivery POs": "To identify overdue deliveries as of 2024-01-20, filter the data based on two conditions:\n1. 'Actual Delivery Date' is blank (empty).\n2. 'Expected Delivery Date' is on or before 2024-01-20.\n\nApplying these filters to the provided data:\n- PO-2023-103: Expected Delivery Date is 2024-01-18, Actual Delivery Date is blank. **Overdue.**\n- PO-2023-105: Expected Delivery Date is 2024-01-25, Actual Delivery Date is blank. Not overdue.\n- PO-2023-107: Expected Delivery Date is 2024-01-22, Actual Delivery Date is blank. Not overdue.\n- PO-2023-108: Expected Delivery Date is 2024-01-17, Actual Delivery Date is blank. **Overdue.**\n- PO-2023-110: Expected Delivery Date is 2024-01-20, Actual Delivery Date is blank. **Overdue.**\n\nThe Overdue Delivery POs are: PO-2023-103, PO-2023-108, and PO-2023-110. The order of PO numbers in the array does not matter.",
        "Global Components Inc. Order Count": "To count the number of purchase orders from 'Global Components Inc.', filter the data by the 'Supplier' column and count the rows where the supplier is 'Global Components Inc.'.\n\nBy filtering the 'Supplier' column for 'Global Components Inc.', we find the following Purchase Order Numbers:\n- PO-2023-103\n- PO-2023-106\n- PO-2023-107\n\nThere are a total of 3 purchase orders from 'Global Components Inc.'."
    },
    "passing_criteria": {
        "minimum_correct_answers": 3,
        "spreadsheet_accuracy": "Data entry in the spreadsheet should be largely accurate (minor typos acceptable but no significant data omissions or errors). The 'Total Cost' column must be correctly calculated using formulas.",
        "submission_format": "The `test_submission.json` file must be valid JSON and adhere to the specified format. The spreadsheet file (`purchase_records.xlsx` or `.csv`) must be submitted and readable."
    },
    "validation_method": {
        "automated_json_check": "Compare the submitted `test_submission.json` file against the `answer_key` section. For 'Total Cost PO-2023-103' and 'Global Components Inc. Order Count', perform an exact string comparison. For 'Overdue Delivery POs', check if the submitted array contains all the PO numbers in the answer key array, regardless of order.  A simple approach is to sort both the submitted and answer key arrays and then compare them element-wise.",
        "spreadsheet_review": "Manually review the submitted spreadsheet (`purchase_records.xlsx` or `.csv`) to ensure:\n    - All columns from the PDF are present and correctly named.\n    - Data entry is reasonably accurate.\n    - The 'Total Cost' column exists and contains correct formulas (e.g., `=B2*D2` assuming 'Quantity Ordered' is in column B and 'Unit Price' is in column D, and the first data row starts at row 2).  Check a sample of formulas for correctness."
    }
}